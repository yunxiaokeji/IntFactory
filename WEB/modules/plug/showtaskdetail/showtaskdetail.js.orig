
define(function (require, exports, module) {
    require("plug/showtaskdetail/style.css");

    var Global = require("global"),
        ChooseUser = require("chooseuser");
    var doT = require("dot");
    var TalkReply = require("scripts/task/reply");

    (function ($) {
        //默认参数
        var defaultParas = {
            Name: "tb-task-list",
            mark: 0,
            UpdateTaskEndTimeCallBack: function (endtime, taskid) { },
            FinishTaskCallBack: function () { }
        };
        var isClickEventFinish = true;

        $.fn.showtaskdetail = function (options) {
            defaultParas = $.extend([], defaultParas, options);

            $(this).click(function () {
                if (isClickEventFinish) {
                    isClickEventFinish = false;
                    $(this).addClass("taskDetailContent");

                    defaultParas.taskid = $(this).data("taskid");
                    defaultParas.guid = $(this).data("orderid");
<<<<<<< HEAD
=======
                    defaultParas.orderid = $(this).data("orderid");
>>>>>>> 892851ca93cd15395c984248500aa4790fc9e0e8
                    defaultParas.stageid = $(this).data("stageid");
                    defaultParas.mark = $(this).data("mark");
                    defaultParas.self = $(this).data("self");

                    var $taskDetailContent = $("#taskDetailContent");

                    //没有任务详情对象
                    if ($taskDetailContent.length == 0) {
                        drawTaskDetail();
                    }
                    else {
                        //查询新的任务详情
                        if ($taskDetailContent.data("taskid") != defaultParas.taskid) {
                            drawTaskDetail();
                        }
                        else//隐藏显示的任务详情
                        {
                            if ($taskDetailContent.css("width") == "500px") {
                                $taskDetailContent.animate({ width: '0px' }, 200);
                            }
                            else {
                                $taskDetailContent.show().animate({ width: '500px' }, 200);
                            }
                        }
                    }

                    isClickEventFinish = true;
                }

            });
        };

        //获取任务详情
        var drawTaskDetail = function () {
            doT.exec("plug/showtaskdetail/task-detail.html", function (template) {
                Global.post("/task/GetTaskDetail", { id: defaultParas.taskid }, function (data) {
                    //获取任务详情内容
                    var item = data.item;
                    var items = [item];
                    var innerhtml = template(items);
                    $("#taskDetailContent").remove();
                    $("body").append(innerhtml);

                    if (item.FinishStatus == 0) {
                        $("#taskDetailContent").css("box-shadow", "0 0 5px #ccc");
                    } else if (item.FinishStatus == 1) {
                        $("#taskDetailContent").css("box-shadow", "0 0 5px #45BF67");
                    } else if (item.FinishStatus == 2) {
                        $("#taskDetailContent").css("box-shadow", "0 0 5px #3A7DE5");
                    }
                    $("#taskDetailContent").animate({ width: '500px' }, 200);

                    //隐藏下拉
                    $(document).click(function (e) {
                        if (!$(e.target).parents().hasClass("task-layer-box") && !$(e.target).hasClass("task-layer-box")
                            && !$(e.target).parents().hasClass("easyDialog_wrapper") && !$(e.target).hasClass("easyDialog_wrapper")
                            && !$(e.target).parents().hasClass("alert") && !$(e.target).hasClass("alert")
                            && !$(e.target).parents().hasClass("stage-items") && !$(e.target).hasClass("stage-items")
                            && !$(e.target).parents().hasClass("qqFace") && !$(e.target).hasClass("qqFace")
                            ) {
                            $("#taskDetailContent").animate({ width: '0px' }, 100);
                        }
                    });

                    //绑定讨论表情
                    $('#btn-emotion').qqFace({
                        assign: 'txtContent',
                        path: '/modules/plug/qqface/arclist/'	//表情存放的路径
                    });

                    if (defaultParas.self == 1) {
                        $("#changeTaskOwner").click(function () {
                            var _this = $(this);
                            ChooseUser.create({
                                title: "更换负责人",
                                type: 1,
                                single: true,
                                callback: function (items) {
                                    if (items.length > 0) {
                                        if (_this.data("userid") != items[0].id) {
                                            Global.post("/Task/UpdateTaskOwner", {
                                                userid: items[0].id,
                                                taskid: defaultParas.taskid
                                            }, function (data) {
                                                if (data.result) {
                                                    $("#taskOwnerID").text(items[0].name);
                                                    $("#changeTaskOwner").data("userid", items[0].id);
                                                }
                                            });
                                        } else {
                                            alert("请选择不同人员进行更换!");
                                        }
                                    }
                                }
                            });
                        });
                    }
                    else {
                        $("#changeTaskOwner").hide();
                        $(".tast-link-controller").attr("href", "javascript:void(0)")
                    }

                    //初始化任务讨论
                    TalkReply.initTalkReply(defaultParas);
                });
            });
        }

    })(jQuery)

    module.exports = jQuery;
});